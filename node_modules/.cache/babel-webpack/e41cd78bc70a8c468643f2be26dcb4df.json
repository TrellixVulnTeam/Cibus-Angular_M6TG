{"ast":null,"code":"import { FormGroup, Validators, FormControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./ingredientCRUD.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\n\nfunction AddIngredientItemPageComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵtext(1, \" Ingredient Name has invalid characters \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AddIngredientItemPageComponent_div_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Ingredient successfully created!\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let AddIngredientItemPageComponent = /*#__PURE__*/(() => {\n  class AddIngredientItemPageComponent {\n    constructor(IngredientCRUD) {\n      this.IngredientCRUD = IngredientCRUD;\n      this.isShown = false;\n    }\n\n    ngOnInit() {\n      this.form = new FormGroup({\n        Ingredient_Name: new FormControl('', Validators.compose([Validators.required, Validators.pattern('[\\\\w\\\\-\\\\s\\\\/]+')])),\n        Protein: new FormControl('', Validators.pattern('^-?[0-9]\\\\d*(\\\\.\\\\d{1,4})?$')),\n        Carbohydrate: new FormControl('', Validators.pattern('^-?[0-9]\\\\d*(\\\\.\\\\d{1,4})?$')),\n        Sugar: new FormControl('', Validators.pattern('^-?[0-9]\\\\d*(\\\\.\\\\d{1,4})?$')),\n        Fat: new FormControl('', Validators.pattern('^-?[0-9]\\\\d*(\\\\.\\\\d{1,4})?$')),\n        Sodium: new FormControl('', Validators.pattern('^-?[0-9]\\\\d*(\\\\.\\\\d{1,4})?$')),\n        Calories: new FormControl('', Validators.pattern('^-?[0-9]\\\\d*(\\\\.\\\\d{1,4})?$'))\n      });\n    }\n\n    onSubmit(newIngredient) {\n      this.IngredientCRUD.createIngredient(newIngredient).subscribe();\n      this.showMessage();\n      this.clearForm();\n    }\n\n    showMessage() {\n      this.isShown = !this.isShown;\n    }\n\n    clearForm() {\n      this.form.reset();\n    }\n\n  }\n\n  AddIngredientItemPageComponent.ɵfac = function AddIngredientItemPageComponent_Factory(t) {\n    return new (t || AddIngredientItemPageComponent)(i0.ɵɵdirectiveInject(i1.IngredientCRUDService));\n  };\n\n  AddIngredientItemPageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddIngredientItemPageComponent,\n    selectors: [[\"add-ingredient-item-page\"]],\n    decls: 43,\n    vars: 4,\n    consts: [[1, \"container\", \"h-100\"], [1, \"row\", \"h-100\", \"justify-content-center\", \"align-items-center\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"Ingredient_Name\"], [\"type\", \"text\", \"name\", \"Ingredient_Name\", \"id\", \"Ingredient_Name\", \"formControlName\", \"Ingredient_Name\"], [\"class\", \"error\", 4, \"ngIf\"], [\"for\", \"Protein\"], [\"type\", \"number\", \"name\", \"Protein\", \"id\", \"Protein\", \"formControlName\", \"Protein\"], [\"for\", \"Carbohydrate\"], [\"type\", \"number\", \"name\", \"Carbohydrate\", \"id\", \"Carbohydrate\", \"formControlName\", \"Carbohydrate\"], [\"for\", \"Sugar\"], [\"type\", \"number\", \"name\", \"Sugar\", \"id\", \"Sugar\", \"formControlName\", \"Sugar\"], [\"for\", \"Fat\"], [\"type\", \"number\", \"name\", \"Fat\", \"id\", \"Fat\", \"formControlName\", \"Fat\"], [\"for\", \"Sodium\"], [\"type\", \"number\", \"name\", \"Sodium\", \"id\", \"Sodium\", \"formControlName\", \"Sodium\"], [\"for\", \"Calories\"], [\"type\", \"number\", \"name\", \"Calories\", \"id\", \"Calories\", \"formControlName\", \"Calories\"], [1, \"text-center\"], [\"type\", \"submit\", 1, \"btn\", \"buttonStyle\", 3, \"disabled\"], [4, \"ngIf\"], [1, \"error\"]],\n    template: function AddIngredientItemPageComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"header\");\n        i0.ɵɵelement(1, \"br\");\n        i0.ɵɵelement(2, \"br\");\n        i0.ɵɵelement(3, \"br\");\n        i0.ɵɵelement(4, \"br\");\n        i0.ɵɵelementStart(5, \"h1\");\n        i0.ɵɵtext(6, \"Add a New Ingredient\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 0);\n        i0.ɵɵelementStart(8, \"div\", 1);\n        i0.ɵɵelementStart(9, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function AddIngredientItemPageComponent_Template_form_ngSubmit_9_listener() {\n          return ctx.onSubmit(ctx.form.value);\n        });\n        i0.ɵɵelementStart(10, \"div\", 3);\n        i0.ɵɵelementStart(11, \"label\", 4);\n        i0.ɵɵtext(12, \"Ingredient Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 5);\n        i0.ɵɵtemplate(14, AddIngredientItemPageComponent_div_14_Template, 2, 0, \"div\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 3);\n        i0.ɵɵelementStart(16, \"label\", 7);\n        i0.ɵɵtext(17, \"Protein (g)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(18, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 3);\n        i0.ɵɵelementStart(20, \"label\", 9);\n        i0.ɵɵtext(21, \"Carbohydrate (g)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(22, \"input\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"div\", 3);\n        i0.ɵɵelementStart(24, \"label\", 11);\n        i0.ɵɵtext(25, \"Sugar (g)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(26, \"input\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"div\", 3);\n        i0.ɵɵelementStart(28, \"label\", 13);\n        i0.ɵɵtext(29, \"Fat (g)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(30, \"input\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"div\", 3);\n        i0.ɵɵelementStart(32, \"label\", 15);\n        i0.ɵɵtext(33, \"Sodium (mg)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(34, \"input\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"div\", 3);\n        i0.ɵɵelementStart(36, \"label\", 17);\n        i0.ɵɵtext(37, \"Calories (Kcal)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(38, \"input\", 18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(39, \"div\", 19);\n        i0.ɵɵelementStart(40, \"button\", 20);\n        i0.ɵɵtext(41, \"Save\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(42, AddIngredientItemPageComponent_div_42_Template, 2, 0, \"div\", 21);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.get(\"Ingredient_Name\").hasError(\"pattern\"));\n        i0.ɵɵadvance(26);\n        i0.ɵɵproperty(\"disabled\", !ctx.form.valid);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.isShown);\n      }\n    },\n    directives: [i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.DefaultValueAccessor, i2.NgControlStatus, i2.FormControlName, i3.NgIf, i2.NumberValueAccessor],\n    styles: [\"h1[_ngcontent-%COMP%]{text-align:center}label[_ngcontent-%COMP%]{width:150px;line-height:26px;margin-bottom:10px}input[_ngcontent-%COMP%]{height:26px}form[_ngcontent-%COMP%]{border:1px solid #000;padding:40px;margin:30px}\"]\n  });\n  return AddIngredientItemPageComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}