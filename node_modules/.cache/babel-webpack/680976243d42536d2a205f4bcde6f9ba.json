{"ast":null,"code":"import { FormGroup, Validators, FormControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./ingredientCRUD.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\n\nfunction UpdateIngredientItemPageComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵtext(1, \" Ingredient name has invalid characters \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UpdateIngredientItemPageComponent_div_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Ingredient successfully updated!\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let UpdateIngredientItemPageComponent = /*#__PURE__*/(() => {\n  class UpdateIngredientItemPageComponent {\n    constructor(ingredientCRUD, route) {\n      this.ingredientCRUD = ingredientCRUD;\n      this.route = route;\n      this.isShown = false;\n    }\n\n    ngOnInit() {\n      this.ingredient_ID = this.route.snapshot.params['ingredient_ID'];\n      this.getIngredientByID();\n      this.form = new FormGroup({\n        Ingredient_Name: new FormControl('', Validators.compose([Validators.required, Validators.pattern('[\\\\w\\\\-\\\\s\\\\/]+')])),\n        Protein: new FormControl('', Validators.pattern('^-?[0-9]\\\\d*(\\\\.\\\\d{1,4})?$')),\n        Carbohydrate: new FormControl('', Validators.pattern('^-?[0-9]\\\\d*(\\\\.\\\\d{1,4})?$')),\n        Sugar: new FormControl('', Validators.pattern('^-?[0-9]\\\\d*(\\\\.\\\\d{1,4})?$')),\n        Fat: new FormControl('', Validators.pattern('^-?[0-9]\\\\d*(\\\\.\\\\d{1,4})?$')),\n        Sodium: new FormControl('', Validators.pattern('^-?[0-9]\\\\d*(\\\\.\\\\d{1,4})?$')),\n        Calories: new FormControl('', Validators.pattern('^-?[0-9]\\\\d*(\\\\.\\\\d{1,4})?$'))\n      });\n    }\n\n    onSubmit(ingredient) {\n      this.ingredientCRUD.updateIngredient(this.ingredient_ID, ingredient).subscribe(data => {\n        this.ingredient = data;\n      });\n      this.showMessage();\n      this.clearForm();\n    }\n\n    getIngredientByID() {\n      this.ingredientCRUD.getIngredient(this.ingredient_ID).subscribe(data => {\n        this.ingredient = data;\n      });\n    }\n\n    showMessage() {\n      this.isShown = !this.isShown;\n    }\n\n    clearForm() {\n      this.form.reset();\n    }\n\n  }\n\n  UpdateIngredientItemPageComponent.ɵfac = function UpdateIngredientItemPageComponent_Factory(t) {\n    return new (t || UpdateIngredientItemPageComponent)(i0.ɵɵdirectiveInject(i1.IngredientCRUDService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n\n  UpdateIngredientItemPageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UpdateIngredientItemPageComponent,\n    selectors: [[\"update-ingredient-item-page\"]],\n    decls: 46,\n    vars: 11,\n    consts: [[1, \"container\", \"h-100\"], [1, \"row\", \"h-100\", \"justify-content-center\", \"align-items-center\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"Ingredient_Name\"], [\"type\", \"text\", \"name\", \"Ingredient_Name\", \"id\", \"Ingredient_Name\", \"formControlName\", \"Ingredient_Name\", 3, \"ngModel\"], [\"class\", \"error\", 4, \"ngIf\"], [\"for\", \"Protein\"], [\"type\", \"number\", \"name\", \"Protein\", \"id\", \"Protein\", \"formControlName\", \"Protein\", 3, \"ngModel\"], [\"for\", \"Carbohydrate\"], [\"type\", \"number\", \"name\", \"Carbohydrate\", \"id\", \"Carbohydrate\", \"formControlName\", \"Carbohydrate\", 3, \"ngModel\"], [\"for\", \"Sugar\"], [\"type\", \"number\", \"name\", \"Sugar\", \"id\", \"Sugar\", \"formControlName\", \"Sugar\", 3, \"ngModel\"], [\"for\", \"Fat\"], [\"type\", \"number\", \"name\", \"Fat\", \"id\", \"Fat\", \"formControlName\", \"Fat\", 3, \"ngModel\"], [\"for\", \"Sodium\"], [\"type\", \"number\", \"name\", \"Sodium\", \"id\", \"Sodium\", \"formControlName\", \"Sodium\", 3, \"ngModel\"], [\"for\", \"Calories\"], [\"type\", \"number\", \"name\", \"Calories\", \"id\", \"Calories\", \"formControlName\", \"Calories\", 3, \"ngModel\"], [1, \"text-center\"], [\"type\", \"submit\", 1, \"btn\", \"buttonStyle\", 3, \"disabled\"], [4, \"ngIf\"], [1, \"error\"]],\n    template: function UpdateIngredientItemPageComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"section\");\n        i0.ɵɵelement(1, \"br\");\n        i0.ɵɵelement(2, \"br\");\n        i0.ɵɵelement(3, \"br\");\n        i0.ɵɵelementStart(4, \"h1\");\n        i0.ɵɵtext(5, \"Update Ingredient\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 0);\n        i0.ɵɵelementStart(7, \"div\", 1);\n        i0.ɵɵelementStart(8, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function UpdateIngredientItemPageComponent_Template_form_ngSubmit_8_listener() {\n          return ctx.onSubmit(ctx.form.value);\n        });\n        i0.ɵɵelementStart(9, \"div\", 3);\n        i0.ɵɵelementStart(10, \"label\", 4);\n        i0.ɵɵtext(11, \"Ingredient Name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 5);\n        i0.ɵɵtemplate(13, UpdateIngredientItemPageComponent_div_13_Template, 2, 0, \"div\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 3);\n        i0.ɵɵelementStart(15, \"label\", 7);\n        i0.ɵɵtext(16, \"Protein:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 3);\n        i0.ɵɵelementStart(19, \"label\", 9);\n        i0.ɵɵtext(20, \"Carbohydrate:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"input\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"div\", 3);\n        i0.ɵɵelementStart(23, \"label\", 11);\n        i0.ɵɵtext(24, \"Sugar:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(25, \"input\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"div\", 3);\n        i0.ɵɵelementStart(27, \"label\", 13);\n        i0.ɵɵtext(28, \"Fat:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(29, \"input\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"div\", 3);\n        i0.ɵɵelementStart(31, \"label\", 15);\n        i0.ɵɵtext(32, \"Sodium:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(33, \"input\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"div\", 3);\n        i0.ɵɵelementStart(35, \"label\", 17);\n        i0.ɵɵtext(36, \"Calories:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(37, \"input\", 18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"div\", 19);\n        i0.ɵɵelementStart(39, \"button\", 20);\n        i0.ɵɵtext(40, \"Save\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(41, UpdateIngredientItemPageComponent_div_41_Template, 2, 0, \"div\", 21);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(42, \"br\");\n        i0.ɵɵelement(43, \"br\");\n        i0.ɵɵelement(44, \"br\");\n        i0.ɵɵelement(45, \"br\");\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.ingredient.Ingredient_Name);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.get(\"Ingredient_Name\").hasError(\"pattern\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.ingredient.Protein);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.ingredient.Carbohydrate);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.ingredient.Sugar);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.ingredient.Fat);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.ingredient.Sodium);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.ingredient.Calories);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", !ctx.form.valid);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.isShown);\n      }\n    },\n    directives: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.DefaultValueAccessor, i3.NgControlStatus, i3.FormControlName, i4.NgIf, i3.NumberValueAccessor],\n    styles: [\"h1[_ngcontent-%COMP%]{text-align:center}label[_ngcontent-%COMP%]{width:150px;line-height:26px;margin-bottom:10px}input[_ngcontent-%COMP%]{height:26px}form[_ngcontent-%COMP%]{border:1px solid #dcdcdc;border-radius:5px;padding:40px;margin:30px;box-shadow:5px 5px 5px #dcdcdc}.buttonStyle[_ngcontent-%COMP%]{text-decoration:none;background-color:#ffc11e;border-radius:5%;color:#000;font-size:1em;padding:5px 15px;box-shadow:5px 5px 10px #a8a8a8}\"]\n  });\n  return UpdateIngredientItemPageComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}