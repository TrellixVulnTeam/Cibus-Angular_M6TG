{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let RecipeCRUDService = /*#__PURE__*/(() => {\n  class RecipeCRUDService {\n    constructor(http) {\n      this.http = http;\n    }\n\n    getAllRecipes() {\n      return this.http.get('http://localhost:3000/recipes').pipe(catchError(this.handleError));\n    }\n\n    getVeganRecipes() {\n      return this.http.get('http://localhost:3000/vegan-recipes').pipe(catchError(this.handleError));\n    }\n\n    getVegetarianRecipes() {\n      return this.http.get('http://localhost:3000/vegetarian-recipes').pipe(catchError(this.handleError));\n    }\n\n    getMeatRecipes() {\n      return this.http.get('http://localhost:3000/meat-recipes').pipe(catchError(this.handleError));\n    }\n\n    getSides() {\n      return this.http.get('http://localhost:3000/sides').pipe(catchError(this.handleError));\n    }\n\n    getSalads() {\n      return this.http.get('http://localhost:3000/salads').pipe(catchError(this.handleError));\n    }\n\n    getSoups() {\n      return this.http.get('http://localhost:3000/soups').pipe(catchError(this.handleError));\n    }\n\n    getGrainRecipes() {\n      return this.http.get('http://localhost:3000/grain-recipes').pipe(catchError(this.handleError));\n    }\n\n    getRecipe(recipe_ID) {\n      return this.http.get(`http://localhost:3000/recipes/${recipe_ID}`).pipe(map(response => {\n        console.log(response);\n        return response;\n      }), catchError(this.handleError));\n    }\n\n    createRecipe(newRecipe) {\n      return this.http.post(`http://localhost:3000/add-recipe`, newRecipe).pipe(catchError(this.handleError));\n    }\n\n    updateRecipe(recipe_ID, recipe) {\n      return this.http.put(`http://localhost:3000/update-recipe/${recipe_ID}`, recipe).pipe(catchError(this.handleError));\n    }\n\n    deleteRecipe(recipe_ID, recipe) {\n      return this.http.put(`http://localhost:3000/delete-recipe/${recipe_ID}`, recipe).pipe(catchError(this.handleError));\n    }\n\n    handleError(error) {\n      console.error(error.message);\n      return throwError('A data error occurred, please try again.');\n    }\n\n  }\n\n  RecipeCRUDService.ɵfac = function RecipeCRUDService_Factory(t) {\n    return new (t || RecipeCRUDService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  RecipeCRUDService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RecipeCRUDService,\n    factory: RecipeCRUDService.ɵfac,\n    providedIn: 'root'\n  });\n  return RecipeCRUDService;\n})();","map":null,"metadata":{},"sourceType":"module"}